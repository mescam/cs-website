# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

    # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

  # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
  # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.

  # Default to bash
defaults:
  run:
    shell: bash

jobs:
  build-pdfs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install nix
        uses: cachix/install-nix-action@v30
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - name: Build labs
        run: nix build
        working-directory: ./labs
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: labs
          path: ./labs/result
  build-website:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.128.0
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
        working-directory: website
      - name: Build with Hugo
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
        run: |
          hugo \
          --minify \
          --baseURL "//www.cs.put.poznan.pl/jwozniak/"
        working-directory: website
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: public
          path: ./website/public
          # Deployment job
  deploy:
    environment:
      name: libra
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: public
          path: ./public
      - name: Setup SSH keys
        run: |
          ssh-keyscan ${{ secrets.SERVER_HOST }}
          echo "${{ secrets.SSH_KEY }}" > ssh_key
          chmod 600 ssh_key
      - name: Deploy using rsync
        run: |
          rsync -avz -e "ssh -i ssh_key -o StrictHostKeyChecking=no" ./public/ ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:~/public_html/
